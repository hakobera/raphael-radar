{"name":"Raphael-Radar","body":"raphael-radar\r\n=============\r\n\r\nhakobera/raphael-radar is a refactored version of\r\n[Raphael-Radar](https://github.com/jsoma/raphael-radar)\r\n\r\n![Screen Shot](https://github.com/hakobera/raphael-radar/raw/master/example/images/screenshot.png)\r\n\r\nThe objectives of refactoring are...\r\n\r\n* Work with the latest version of Raphaël 2.1.0 and jQuery 1.7.2.\r\n* Fix some bugs.\r\n* Remove unnessesary code from the library and put the idea into example.\r\n* Make the code simpler.\r\n* Add ruler label\r\n* Add event example.\r\n\r\nPlease note that there is no compatibility with the original version.\r\n\r\nExample\r\n-------\r\n\r\nRaphael-Radar now has the option to maintain all content & style options through the objects passed to radarchart, instead of using a separate 'scores' array or manually manipulating the Raphaël chart.\r\n\r\nStyle options are maintained through the draw_options object. See `default_draw_options` in raphael-radar.js for defaults. All attributes are passed directly to Raphaël via `attr()` so you can set pretty much whatever attributes you'd like on lines, points and text.\r\n\r\nThe following chart can be created using the code below it, and you no longer need to edit the lines and points manually.\r\n\r\n![Screen Shot](https://github.com/hakobera/raphael-radar/raw/master/example/images/screenshot.png)\r\n    \r\n    var objects = [\r\n        { title: \"Real Madrid C.F.\", \r\n          offense: 80,\r\n          defense: 90,\r\n          technique: 70,\r\n          strategy: 90,\r\n          physicality: 70,\r\n          mentality: 60,\r\n          draw_options: {\r\n            lines: {'stroke-width':'2', 'stroke':'#39b549','stroke-dasharray':'- '},\r\n            points: {'fill':'#39b549','stroke-width':'0'},\r\n            text: {}\r\n          }\r\n        },\r\n        { title: \"FC Barcelona\", \r\n          offense: 100,\r\n          defense: 70,\r\n          technique: 100,\r\n          strategy: 70,\r\n          physicality: 60,\r\n          mentality: 80,\r\n          draw_options: {\r\n            lines: {'stroke-width':'4','stroke':'#0070bb','stroke-opacity':0.7,'fill':'#f7d2a8','fill-opacity':0.6},\r\n            points: {'fill':'#f05a23','stroke-width':'1.5','stroke':'#333', 'size': 6},\r\n            text: {}\r\n          }\r\n        }\r\n    ];\r\n\r\n    var paper = Raphael( \"id_of_some_div\", 460, 360);\r\n    paper.radarchart(221, 160, 120, labels, 50, 100, objects);\r\n\r\nSeeing example is always the best way to understand how it works.","tagline":"Raphael Radar is a JavaScript library to draw a controlable radar chart using Raphael.js, a JavaScript library to draw SVG","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}